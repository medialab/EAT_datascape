image: docker:stable

stages:
  - build
  - deploy

variables:
  FRONTEND_IMAGE_NAME: $CI_REGISTRY_IMAGE/eat-frontend:$CI_COMMIT_REF_SLUG
  BACKEND_IMAGE_NAME: $CI_REGISTRY_IMAGE/eat-backend:$CI_COMMIT_REF_SLUG

build_frontend:
  stage: build
  script:
    - docker build -t $FRONTEND_IMAGE_NAME  .
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker push $FRONTEND_IMAGE_NAME
  environment:
    name: $CI_COMMIT_REF_SLUG
  only:
    - master
    - staging
    - prod
    - tags

build_backend:
  stage: build
  script:
    - docker build -t $BACKEND_IMAGE_NAME -f eat_archive/Dockerfile eat_archive/
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker push $BACKEND_IMAGE_NAME
  environment:
    name: $CI_COMMIT_REF_SLUG
  only:
    - master
    - staging
    - prod
    - tags

deploy:
  image:
    name: jrisp/kubehelper:latest
    entrypoint: [""]
  stage: deploy
  dependencies:
    - build_frontend
    - build_backend
  script:
    - NS=eat
    - kubectl config set-cluster k8s --server="$KUBE_URL" --certificate-authority="$KUBE_CA_PEM_FILE"
    - kubectl config set-credentials gitlab-admin --token="$KUBE_TOKEN"
    - kubectl config set-context default --cluster=k8s --user=gitlab-admin
    - kubectl config use-context default
    - kubectl apply -f k8s/namespace.yml
    - cp ${BACKEND_SECRETS} k8s/overlays/$CI_COMMIT_REF_SLUG/backend.env
    - kubectl apply -k k8s/overlays/$CI_COMMIT_REF_SLUG
    - kubectl -n ${NS} rollout restart deployment ${NS}-backend
    - kubectl -n ${NS} rollout restart deployment ${NS}-frontend
  environment:
    name: $CI_COMMIT_REF_SLUG
  only:
   - staging
   - prod
